[{"/Users/deepmedimac/Documents/parctice/gpt/client/src/index.tsx":"1","/Users/deepmedimac/Documents/parctice/gpt/client/src/App.tsx":"2","/Users/deepmedimac/Documents/parctice/gpt/client/src/styles/GlobalStyle.tsx":"3","/Users/deepmedimac/Documents/parctice/gpt/client/src/hooks/useMiddleware.ts":"4","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/QnaItem/QnaItem.tsx":"5","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/GptInfo/GptInfo.tsx":"6","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/Question/Question.tsx":"7","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/GptInfo/styles.ts":"8","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/QnaItem/styles.ts":"9","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/Question/styles.ts":"10","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/atoms/icon/icon.ts":"11","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/atoms/Input/Input.tsx":"12","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/atoms/Input/styles.ts":"13"},{"size":291,"mtime":1681176256072,"results":"14","hashOfConfig":"15"},{"size":931,"mtime":1681176256069,"results":"16","hashOfConfig":"15"},{"size":501,"mtime":1681176256073,"results":"17","hashOfConfig":"15"},{"size":2532,"mtime":1681190821196,"results":"18","hashOfConfig":"15"},{"size":651,"mtime":1681176256071,"results":"19","hashOfConfig":"15"},{"size":439,"mtime":1681176256070,"results":"20","hashOfConfig":"15"},{"size":1360,"mtime":1681176256071,"results":"21","hashOfConfig":"15"},{"size":671,"mtime":1681176256070,"results":"22","hashOfConfig":"15"},{"size":1874,"mtime":1681176256071,"results":"23","hashOfConfig":"15"},{"size":860,"mtime":1681176256071,"results":"24","hashOfConfig":"15"},{"size":360,"mtime":1681176256072,"results":"25","hashOfConfig":"15"},{"size":1182,"mtime":1681176256071,"results":"26","hashOfConfig":"15"},{"size":672,"mtime":1681176256072,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"imiui8",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/deepmedimac/Documents/parctice/gpt/client/src/index.tsx",[],[],"/Users/deepmedimac/Documents/parctice/gpt/client/src/App.tsx",[],[],"/Users/deepmedimac/Documents/parctice/gpt/client/src/styles/GlobalStyle.tsx",[],[],"/Users/deepmedimac/Documents/parctice/gpt/client/src/hooks/useMiddleware.ts",["69","70","71"],[],"import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { TQna } from \"../types/qna.type\";\n\nconst useMiddleware = () => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [qnaArr, setQnaArr] = useState<TQna[]>([]);\n  const [isScrollTop, setIsScrollTop] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // 질문 Request 후 Response를 Set\n  const generateResponse = async (newQuestion: string) => {\n    setIsLoading(true);\n    setQnaArr([{ question: newQuestion, answer: \"\" }, ...qnaArr]);\n    if (inputRef.current) {\n      inputRef.current.value = \"\";\n    }\n    const requestOption = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ newQuestion }),\n    };\n    await fetch(\"http://localhost:8080/\", requestOption)\n      .then((res) => res.json())\n      .then((data) => {\n        const { message } = data;\n        try {\n          setQnaArr([\n            {\n              question: newQuestion,\n              answer: message,\n            },\n            ...qnaArr,\n          ]);\n          setIsLoading(false);\n        } catch (err) {\n          setQnaArr([\n            {\n              question: newQuestion,\n              answer:\n                \"에러가 발생했습니다. 좀 더 구체적인 질문으로 물어봐 주세요!\",\n            },\n            ...qnaArr,\n          ]);\n          console.log(err);\n        }\n      });\n  };\n\n  // Scroll 이벤트\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [isScrollTop]);\n\n  // Scroll이 Top인지 아닌지 체크 후 Set로직\n  const handleScroll = () => {\n    if (window.scrollY > 160 && !isScrollTop) {\n      setIsScrollTop(true);\n    } else if (window.scrollY <= 160 && isScrollTop) {\n      setIsScrollTop(false);\n    }\n  };\n\n  // Input Submit 버튼\n  const sendClick = useCallback(() => {\n    if (inputRef.current && inputRef.current?.value.trim() !== \"\") {\n      generateResponse(inputRef.current?.value);\n    }\n  }, [qnaArr]);\n\n  const questionEnter = useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (\n        e.key === \"Enter\" &&\n        inputRef.current &&\n        inputRef.current?.value.trim() !== \"\"\n      )\n        generateResponse(inputRef.current?.value);\n    },\n    [qnaArr]\n  );\n\n  return { qnaArr, inputRef, isScrollTop, isLoading, sendClick, questionEnter };\n};\n\nexport default useMiddleware;\n","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/QnaItem/QnaItem.tsx",[],[],"/Users/deepmedimac/Documents/parctice/gpt/client/src/components/GptInfo/GptInfo.tsx",[],[],"/Users/deepmedimac/Documents/parctice/gpt/client/src/components/Question/Question.tsx",[],[],"/Users/deepmedimac/Documents/parctice/gpt/client/src/components/GptInfo/styles.ts",[],[],"/Users/deepmedimac/Documents/parctice/gpt/client/src/components/QnaItem/styles.ts",[],[],"/Users/deepmedimac/Documents/parctice/gpt/client/src/components/Question/styles.ts",[],[],"/Users/deepmedimac/Documents/parctice/gpt/client/src/components/atoms/icon/icon.ts",[],[],"/Users/deepmedimac/Documents/parctice/gpt/client/src/components/atoms/Input/Input.tsx",["72"],[],"import React, { CSSProperties, useMemo } from 'react';\nimport { StyledInput } from './styles';\n\ninterface IInput extends React.HTMLAttributes<HTMLInputElement> {\n  type: string;\n  width: string;\n  height?: string;\n  fontSize?: string;\n  fontWeight?: string;\n  border?: string;\n  backgroundColor?: string;\n  placeholder?: string;\n  customStyle?: CSSProperties;\n  ref: React.RefObject<HTMLInputElement>;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst Input = React.forwardRef<HTMLInputElement, IInput>(\n  (\n    {\n      width,\n      height,\n      type,\n      fontSize,\n      fontWeight,\n      border,\n      backgroundColor,\n      customStyle,\n      placeholder,\n      onKeyDown,\n    }: IInput,\n    ref\n  ) => {\n    const style = useMemo(() => {\n      return {\n        width,\n        height,\n        fontSize,\n        fontWeight,\n        border,\n        backgroundColor,\n        ...customStyle,\n      };\n    }, [fontSize, fontWeight, border]);\n    return (\n      <StyledInput\n        ref={ref}\n        type={type}\n        placeholder={placeholder}\n        style={style}\n        onKeyDown={onKeyDown}\n      />\n    );\n  }\n);\n\nexport default React.memo(Input);\n","/Users/deepmedimac/Documents/parctice/gpt/client/src/components/atoms/Input/styles.ts",[],[],{"ruleId":"73","severity":1,"message":"74","line":57,"column":6,"nodeType":"75","endLine":57,"endColumn":19,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":73,"column":6,"nodeType":"75","endLine":73,"endColumn":14,"suggestions":"78"},{"ruleId":"73","severity":1,"message":"77","line":84,"column":5,"nodeType":"75","endLine":84,"endColumn":13,"suggestions":"79"},{"ruleId":"73","severity":1,"message":"80","line":44,"column":8,"nodeType":"75","endLine":44,"endColumn":38,"suggestions":"81"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.","ArrayExpression",["82"],"React Hook useCallback has a missing dependency: 'generateResponse'. Either include it or remove the dependency array.",["83"],["84"],"React Hook useMemo has missing dependencies: 'backgroundColor', 'customStyle', 'height', and 'width'. Either include them or remove the dependency array.",["85"],{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [handleScroll, isScrollTop]",{"range":"93","text":"94"},"Update the dependencies array to be: [generateResponse]",{"range":"95","text":"96"},{"range":"97","text":"96"},"Update the dependencies array to be: [width, height, fontSize, fontWeight, border, backgroundColor, customStyle]",{"range":"98","text":"99"},[1583,1596],"[handleScroll, isScrollTop]",[2027,2035],"[generateResponse]",[2312,2320],[935,965],"[width, height, fontSize, fontWeight, border, backgroundColor, customStyle]"]