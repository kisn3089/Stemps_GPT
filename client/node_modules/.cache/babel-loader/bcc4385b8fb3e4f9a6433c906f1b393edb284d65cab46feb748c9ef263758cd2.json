{"ast":null,"code":"var _jsxFileName = \"/Users/deepmedimac/Documents/parctice/gpt/client/src/components/GptInfo/GptInfo.tsx\";\nimport React from 'react';\nimport { InfoContainer, SpanContainer, TextSpan } from './styles';\nimport * as Svg from '../../components/atoms/icon/icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GptInfo = () => {\n  return /*#__PURE__*/_jsxDEV(InfoContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Svg.MeLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpanContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TextSpan, {\n        className: \"strong_font\",\n        children: \"Try it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextSpan, {\n        children: \"Stemps GPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = GptInfo;\nexport default _c2 = /*#__PURE__*/React.memo(GptInfo);\nvar _c, _c2;\n$RefreshReg$(_c, \"GptInfo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","InfoContainer","SpanContainer","TextSpan","Svg","jsxDEV","_jsxDEV","GptInfo","children","MeLogo","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/deepmedimac/Documents/parctice/gpt/client/src/components/GptInfo/GptInfo.tsx"],"sourcesContent":["import React from 'react';\nimport { InfoContainer, SpanContainer, TextSpan } from './styles';\nimport * as Svg from '../../components/atoms/icon/icon';\n\nconst GptInfo = () => {\n  return (\n    <InfoContainer>\n      <Svg.MeLogo />\n      <SpanContainer>\n        <TextSpan className=\"strong_font\">Try it</TextSpan>\n        <TextSpan>Stemps GPT</TextSpan>\n      </SpanContainer>\n    </InfoContainer>\n  );\n};\n\nexport default React.memo(GptInfo);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,UAAU;AACjE,OAAO,KAAKC,GAAG,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,oBACED,OAAA,CAACL,aAAa;IAAAO,QAAA,gBACZF,OAAA,CAACF,GAAG,CAACK,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACdP,OAAA,CAACJ,aAAa;MAAAM,QAAA,gBACZF,OAAA,CAACH,QAAQ;QAACW,SAAS,EAAC,aAAa;QAAAN,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAW,eACnDP,OAAA,CAACH,QAAQ;QAAAK,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAW;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEpB,CAAC;AAACE,EAAA,GAVIR,OAAO;AAYb,eAAAS,GAAA,gBAAehB,KAAK,CAACiB,IAAI,CAACV,OAAO,CAAC;AAAC,IAAAQ,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}