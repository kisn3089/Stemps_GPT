{"ast":null,"code":"var _jsxFileName = \"/Users/deepmedimac/Documents/parctice/gpt/client/src/components/QnaItem/QnaItem.tsx\";\nimport React from 'react';\nimport * as Svg from '../../components/atoms/icon/icon';\nimport { Answer, AnswerBox, Container, Question, QuestionBox } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QanItem = _ref => {\n  let {\n    qnaArr,\n    isLoading\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(QuestionBox, {\n      children: [/*#__PURE__*/_jsxDEV(Svg.MeLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        children: qnaArr.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnswerBox, {\n      isLoading: isLoading,\n      children: [/*#__PURE__*/_jsxDEV(Svg.GptLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Answer, {\n        children: qnaArr.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = QanItem;\nexport default _c2 = /*#__PURE__*/React.memo(QanItem);\nvar _c, _c2;\n$RefreshReg$(_c, \"QanItem\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Svg","Answer","AnswerBox","Container","Question","QuestionBox","jsxDEV","_jsxDEV","QanItem","_ref","qnaArr","isLoading","children","MeLogo","fileName","_jsxFileName","lineNumber","columnNumber","question","GptLogo","answer","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/deepmedimac/Documents/parctice/gpt/client/src/components/QnaItem/QnaItem.tsx"],"sourcesContent":["import React from 'react';\nimport { TQna } from '../../types/qna.type';\nimport * as Svg from '../../components/atoms/icon/icon';\nimport { Answer, AnswerBox, Container, Question, QuestionBox } from './styles';\n\ninterface IQnaItem {\n  qnaArr: TQna;\n  isLoading: boolean;\n}\n\nconst QanItem = ({ qnaArr, isLoading }: IQnaItem) => {\n  return (\n    <Container>\n      <QuestionBox>\n        <Svg.MeLogo />\n        <Question>{qnaArr.question}</Question>\n      </QuestionBox>\n      <AnswerBox isLoading={isLoading}>\n        <Svg.GptLogo />\n        <Answer>{qnaArr.answer}</Answer>\n      </AnswerBox>\n    </Container>\n  );\n};\n\nexport default React.memo(QanItem);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,KAAKC,GAAG,MAAM,kCAAkC;AACvD,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO/E,MAAMC,OAAO,GAAGC,IAAA,IAAqC;EAAA,IAApC;IAAEC,MAAM;IAAEC;EAAoB,CAAC,GAAAF,IAAA;EAC9C,oBACEF,OAAA,CAACJ,SAAS;IAAAS,QAAA,gBACRL,OAAA,CAACF,WAAW;MAAAO,QAAA,gBACVL,OAAA,CAACP,GAAG,CAACa,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACdV,OAAA,CAACH,QAAQ;QAAAQ,QAAA,EAAEF,MAAM,CAACQ;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1B,eACdV,OAAA,CAACL,SAAS;MAACS,SAAS,EAAEA,SAAU;MAAAC,QAAA,gBAC9BL,OAAA,CAACP,GAAG,CAACmB,OAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACfV,OAAA,CAACN,MAAM;QAAAW,QAAA,EAAEF,MAAM,CAACU;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEhB,CAAC;AAACI,EAAA,GAbIb,OAAO;AAeb,eAAAc,GAAA,gBAAevB,KAAK,CAACwB,IAAI,CAACf,OAAO,CAAC;AAAC,IAAAa,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}