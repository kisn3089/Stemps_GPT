{"ast":null,"code":"var _jsxFileName = \"/Users/deepmedimac/Documents/parctice/gpt/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport GptInfo from './components/GptInfo/GptInfo';\nimport QanItem from './components/QnaItem/QnaItem';\nimport Question from './components/Question/Question';\nimport useMiddleware from './hooks/useMiddleware';\nimport { MainContainer } from './styles/GlobalStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    inputRef,\n    qnaArr,\n    isScrollTop,\n    isLoading,\n    sendClick,\n    questionEnter\n  } = useMiddleware();\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      inputRef: inputRef,\n      isScrollTop: isScrollTop,\n      isLoading: isLoading,\n      sendClick: sendClick,\n      questionEnter: questionEnter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), qnaArr.length === 0 ? /*#__PURE__*/_jsxDEV(GptInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : qnaArr.map((qna, i) => {\n      return /*#__PURE__*/_jsxDEV(QanItem, {\n        qnaArr: qna,\n        isLoading: i === 0 && isLoading\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9DAIEhuZfHFHtJU1nfqETl3HVM0=\", false, function () {\n  return [useMiddleware];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["GptInfo","QanItem","Question","useMiddleware","MainContainer","jsxDEV","_jsxDEV","App","_s","inputRef","qnaArr","isScrollTop","isLoading","sendClick","questionEnter","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","qna","i","_c","$RefreshReg$"],"sources":["/Users/deepmedimac/Documents/parctice/gpt/client/src/App.tsx"],"sourcesContent":["import GptInfo from './components/GptInfo/GptInfo';\nimport QanItem from './components/QnaItem/QnaItem';\nimport Question from './components/Question/Question';\nimport useMiddleware from './hooks/useMiddleware';\nimport { MainContainer } from './styles/GlobalStyle';\nimport { TQna } from './types/qna.type';\n\nfunction App() {\n  const { inputRef, qnaArr, isScrollTop, isLoading, sendClick, questionEnter } =\n    useMiddleware();\n\n  return (\n    <MainContainer>\n      <Question\n        inputRef={inputRef}\n        isScrollTop={isScrollTop}\n        isLoading={isLoading}\n        sendClick={sendClick}\n        questionEnter={questionEnter}\n      />\n      {qnaArr.length === 0 ? (\n        <GptInfo />\n      ) : (\n        qnaArr.map((qna: TQna, i: number) => {\n          return (\n            <QanItem key={i} qnaArr={qna} isLoading={i === 0 && isLoading} />\n          );\n        })\n      )}\n    </MainContainer>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,8BAA8B;AAClD,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,aAAa,MAAM,uBAAuB;AACjD,SAASC,aAAa,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,WAAW;IAAEC,SAAS;IAAEC,SAAS;IAAEC;EAAc,CAAC,GAC1EX,aAAa,EAAE;EAEjB,oBACEG,OAAA,CAACF,aAAa;IAAAW,QAAA,gBACZT,OAAA,CAACJ,QAAQ;MACPO,QAAQ,EAAEA,QAAS;MACnBE,WAAW,EAAEA,WAAY;MACzBC,SAAS,EAAEA,SAAU;MACrBC,SAAS,EAAEA,SAAU;MACrBC,aAAa,EAAEA;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B,EACDT,MAAM,CAACU,MAAM,KAAK,CAAC,gBAClBd,OAAA,CAACN,OAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,GAEXT,MAAM,CAACW,GAAG,CAAC,CAACC,GAAS,EAAEC,CAAS,KAAK;MACnC,oBACEjB,OAAA,CAACL,OAAO;QAASS,MAAM,EAAEY,GAAI;QAACV,SAAS,EAAEW,CAAC,KAAK,CAAC,IAAIX;MAAU,GAAhDW,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAkD;IAErE,CAAC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACa;AAEpB;AAACX,EAAA,CAxBQD,GAAG;EAAA,QAERJ,aAAa;AAAA;AAAAqB,EAAA,GAFRjB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}